<%+header%>

<%
local fs = require "nixio.fs"
local http = require "luci.http"
local xml = require "luci.xml"

-- Handle form submission
if http.formvalue("submit") then
    local content = {}
    
    -- Service Settings
    table.insert(content, "# Service Settings")
    table.insert(content, 'UPLOAD_INTERVAL="' .. (http.formvalue("upload_interval") or "60") .. '"')
    table.insert(content, "")
    
    -- Azure Storage Settings
    table.insert(content, "# Azure Storage Settings")
    table.insert(content, 'STORAGE_ACCOUNT_NAME="' .. (http.formvalue("storage_account") or "") .. '"')
    table.insert(content, 'CONTAINER_NAME="' .. (http.formvalue("container_name") or "") .. '"')
    table.insert(content, 'SAS_TOKEN="' .. (http.formvalue("sas_token") or "") .. '"')
    table.insert(content, "")
    
    -- Camera Settings
    table.insert(content, "# Camera Settings")
    table.insert(content, 'CUSTOMER="' .. (http.formvalue("customer") or "") .. '"')
    table.insert(content, 'CAMNAME="' .. (http.formvalue("camname") or "") .. '"')
    table.insert(content, "")
    
    -- Camera Hardware Controls
    table.insert(content, "# Camera Hardware Controls")
    table.insert(content, 'CAM_BRIGHTNESS="' .. (http.formvalue("brightness") or "0") .. '"')
    table.insert(content, 'CAM_CONTRAST="' .. (http.formvalue("contrast") or "32") .. '"')
    table.insert(content, 'CAM_SATURATION="' .. (http.formvalue("saturation") or "64") .. '"')
    table.insert(content, 'CAM_HUE="' .. (http.formvalue("hue") or "0") .. '"')
    table.insert(content, 'CAM_GAMMA="' .. (http.formvalue("gamma") or "100") .. '"')
    table.insert(content, 'CAM_GAIN="' .. (http.formvalue("gain") or "20") .. '"')
    table.insert(content, 'CAM_SHARPNESS="' .. (http.formvalue("sharpness") or "3") .. '"')
    table.insert(content, 'CAM_BACKLIGHT="' .. (http.formvalue("backlight_compensation") or "1") .. '"')
    table.insert(content, 'CAM_AUTO_WB="' .. (http.formvalue("auto_white_balance") and "1" or "0") .. '"')
    table.insert(content, 'CAM_AUTO_EXP="' .. (http.formvalue("exposure_auto_priority") and "1" or "0") .. '"')
    table.insert(content, "")
    
    -- Monitoring
    table.insert(content, "# Monitoring")
    table.insert(content, 'UPTIME_API_URL="' .. (http.formvalue("uptime_api") or "") .. '"')
    table.insert(content, 'UPTIME_PING="' .. (http.formvalue("uptime_ping") or "") .. '"')
    table.insert(content, "")
    
    -- Privacy Settings
    table.insert(content, "# Optional: Privacy Settings")
    table.insert(content, 'POLYGON="' .. (http.formvalue("polygon") or "") .. '"')
    table.insert(content, "")
    
    -- Audio Settings
    table.insert(content, "# Audio Settings")
    local audio_enabled = http.formvalue("audio_enabled") and "true" or "false"
    table.insert(content, 'AUDIO_ENABLED="' .. audio_enabled .. '"')
    table.insert(content, 'AUDIO_DURATION="' .. (http.formvalue("audio_duration") or "3") .. '"')
    
    -- Write to .env file
    local final_content = table.concat(content, "\n") .. "\n"
    fs.writefile("/root/.env", final_content)
    
    -- Handle mjpg-streamer UCI settings using shell commands
    local function shell_escape(str)
        return "'" .. str:gsub("'", "'\"'\"'") .. "'"
    end

    local stream_enabled = http.formvalue("stream_enabled") and "1" or "0"
    local stream_resolution = http.formvalue("stream_resolution") or "1280x720"
    local stream_quality = http.formvalue("stream_quality") or "80"
    local stream_fps = http.formvalue("stream_fps") or "10"
    local stream_port = http.formvalue("stream_port") or "8080"
    local stream_username = http.formvalue("stream_username") or ""
    local stream_password = http.formvalue("stream_password") or ""

    -- Use shell commands to set UCI values
    local uci_commands = {
        "uci set mjpg-streamer.core.enabled=" .. shell_escape(stream_enabled),
        "uci set mjpg-streamer.core.resolution=" .. shell_escape(stream_resolution),
        "uci set mjpg-streamer.core.quality=" .. shell_escape(stream_quality),
        "uci set mjpg-streamer.core.fps=" .. shell_escape(stream_fps),
        "uci set mjpg-streamer.core.port=" .. shell_escape(stream_port)
    }
    
    -- Handle username/password - only set if both are provided
    if stream_username ~= "" and stream_password ~= "" then
        table.insert(uci_commands, "uci set mjpg-streamer.core.username=" .. shell_escape(stream_username))
        table.insert(uci_commands, "uci set mjpg-streamer.core.password=" .. shell_escape(stream_password))
    else
        -- If either is empty, remove both (disable auth)
        table.insert(uci_commands, "uci delete mjpg-streamer.core.username 2>/dev/null || true")
        table.insert(uci_commands, "uci delete mjpg-streamer.core.password 2>/dev/null || true")
    end
    
    table.insert(uci_commands, "uci commit mjpg-streamer")

    local uci_output = ""
    local uci_success = true
    for _, cmd in ipairs(uci_commands) do
        local result = luci.util.exec(cmd .. " 2>&1")
        if result and result ~= "" then
            uci_output = uci_output .. cmd .. " -> " .. result .. "\n"
            if result:match("error") or result:match("failed") then
                uci_success = false
            end
        else
            uci_output = uci_output .. cmd .. " -> OK\n"
        end
    end
    
    -- Run camsetup.sh and capture output
    local camsetup_output = luci.util.exec("/bin/camsetup.sh 2>&1")
    
    -- Restart services to apply new settings
    os.execute("/etc/init.d/u3_service restart")
    os.execute("/etc/init.d/mjpg-streamer restart")
    
    -- Show success message
    local upload_interval = http.formvalue("upload_interval") or "60"
    if uci_success then
        local auth_status = ""
        if stream_username ~= "" and stream_password ~= "" then
            auth_status = " HTTP auth enabled for user: " .. stream_username
        else
            auth_status = " HTTP auth disabled"
        end
        saved_message = "✅ Settings saved successfully! Services restarted with " .. upload_interval .. " second interval. Stream settings updated." .. auth_status
    else
        saved_message = "⚠️ .env settings saved but some UCI updates failed. Check debug output below."
    end
    
    camsetup_result = camsetup_output
    uci_debug_output = uci_output
end

-- Read current .env file
local env_file = "/root/.env"
local env_content = fs.readfile(env_file) or ""

-- Parse current values from .env
local function get_env_value(key)
    local pattern = key .. '="([^"]*)"'
    local value = env_content:match(pattern)
    if not value then
        pattern = key .. "=([^%s]*)"
        value = env_content:match(pattern)
    end
    return value or ""
end

-- Function to read UCI values using shell commands
local function get_uci_shell(key, default)
    local cmd = "uci get mjpg-streamer.core." .. key .. " 2>/dev/null"
    local result = luci.util.exec(cmd)
    if result and result ~= "" then
        return result:gsub("%s+$", ""):gsub("^%s+", "") -- trim whitespace
    end
    return default
end

-- Get all values from .env
local upload_interval = get_env_value("UPLOAD_INTERVAL") ~= "" and get_env_value("UPLOAD_INTERVAL") or "60"
local storage_account = get_env_value("STORAGE_ACCOUNT_NAME")
local container_name = get_env_value("CONTAINER_NAME")
local sas_token = get_env_value("SAS_TOKEN")
local customer = get_env_value("CUSTOMER")
local camname = get_env_value("CAMNAME")
local uptime_api = get_env_value("UPTIME_API_URL")
local uptime_ping = get_env_value("UPTIME_PING")
local polygon = get_env_value("POLYGON")
local audio_enabled = get_env_value("AUDIO_ENABLED")
local audio_duration = get_env_value("AUDIO_DURATION")

-- Camera controls from .env (with defaults)
local cam_brightness = get_env_value("CAM_BRIGHTNESS") ~= "" and get_env_value("CAM_BRIGHTNESS") or "0"
local cam_contrast = get_env_value("CAM_CONTRAST") ~= "" and get_env_value("CAM_CONTRAST") or "32"
local cam_saturation = get_env_value("CAM_SATURATION") ~= "" and get_env_value("CAM_SATURATION") or "64"
local cam_hue = get_env_value("CAM_HUE") ~= "" and get_env_value("CAM_HUE") or "0"
local cam_gamma = get_env_value("CAM_GAMMA") ~= "" and get_env_value("CAM_GAMMA") or "100"
local cam_gain = get_env_value("CAM_GAIN") ~= "" and get_env_value("CAM_GAIN") or "20"
local cam_sharpness = get_env_value("CAM_SHARPNESS") ~= "" and get_env_value("CAM_SHARPNESS") or "3"
local cam_backlight = get_env_value("CAM_BACKLIGHT") ~= "" and get_env_value("CAM_BACKLIGHT") or "1"
local cam_auto_wb = get_env_value("CAM_AUTO_WB") ~= "" and get_env_value("CAM_AUTO_WB") or "1"
local cam_auto_exp = get_env_value("CAM_AUTO_EXP") ~= "" and get_env_value("CAM_AUTO_EXP") or "1"

-- Get mjpg-streamer UCI values using shell commands
local stream_enabled = get_uci_shell("enabled", "0")
local stream_resolution = get_uci_shell("resolution", "1280x720")
local stream_quality = get_uci_shell("quality", "80")
local stream_fps = get_uci_shell("fps", "10")
local stream_port = get_uci_shell("port", "8080")
local stream_username = get_uci_shell("username", "")
local stream_password = get_uci_shell("password", "")

-- Debug: Get current UCI status
local uci_current_status = luci.util.exec("uci show mjpg-streamer 2>&1") or "Failed to read UCI"
%>

<style type="text/css">
.env-form {
    max-width: 800px;
}
.env-section {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 4px;
    margin: 15px 0;
    padding: 15px;
}
.env-section h4 {
    margin-top: 0;
    color: #495057;
    border-bottom: 1px solid #dee2e6;
    padding-bottom: 8px;
}
.env-field {
    margin: 10px 0;
}
.env-field label {
    display: block;
    font-weight: bold;
    margin-bottom: 5px;
}
.env-field input, .env-field textarea, .env-field select {
    width: 100%;
    padding: 8px;
    border: 1px solid #ced4da;
    border-radius: 4px;
    box-sizing: border-box;
}
.env-field textarea {
    height: 60px;
    resize: vertical;
}
.env-field small {
    color: #6c757d;
    font-size: 0.875em;
}
.success-message {
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
    border-radius: 4px;
    padding: 10px;
    margin: 15px 0;
}
.nav-buttons {
    text-align: center;
    margin: 20px 0;
}
.interval-presets {
    margin-top: 5px;
}
.interval-presets button {
    margin: 2px;
    padding: 4px 8px;
    border: 1px solid #ccc;
    background: #f8f9fa;
    border-radius: 3px;
    cursor: pointer;
    font-size: 12px;
}
.interval-presets button:hover {
    background: #e9ecef;
}
.camera-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 15px;
}
@media (max-width: 600px) {
    .camera-grid {
        grid-template-columns: 1fr;
    }
}
.output-section {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 4px;
    padding: 10px;
    margin: 10px 0;
    font-family: monospace;
    font-size: 12px;
    white-space: pre-wrap;
    max-height: 200px;
    overflow-y: auto;
}
.auth-section {
    background: #fff3cd;
    border: 1px solid #ffeaa7;
    border-radius: 4px;
    padding: 10px;
    margin: 10px 0;
}
</style>

<h2>Camera Environment Settings</h2>

<div class="nav-buttons">
    <a href="<%=luci.dispatcher.build_url("admin", "services", "camera")%>" class="cbi-button">🎥 Back to Camera</a>
</div>

<% if saved_message then %>
<div class="success-message"><%=saved_message%></div>
<% end %>

<% if camsetup_result then %>
<div class="env-section">
    <h4>📹 Camera Setup Output</h4>
    <div class="output-section"><%=xml.pcdata(camsetup_result)%></div>
</div>
<% end %>

<% if uci_debug_output then %>
<div class="env-section">
    <h4>🔧 UCI Command Results</h4>
    <div class="output-section"><%=xml.pcdata(uci_debug_output)%></div>
</div>
<% end %>

<form method="post" class="env-form">
    
    <!-- Service Settings -->
    <div class="env-section">
        <h4>⚡ Service Settings</h4>
        
        <div class="env-field">
            <label for="upload_interval">Upload Interval (seconds):</label>
            <input type="number" id="upload_interval" name="upload_interval" value="<%=upload_interval%>" min="5" max="3600" placeholder="60">
            <small>How often the u3.sh service runs (5-3600 seconds)</small>
            <div class="interval-presets">
                <strong>Quick presets:</strong>
                <button type="button" onclick="document.getElementById('upload_interval').value='10'">10s</button>
                <button type="button" onclick="document.getElementById('upload_interval').value='30'">30s</button>
                <button type="button" onclick="document.getElementById('upload_interval').value='60'">1min</button>
                <button type="button" onclick="document.getElementById('upload_interval').value='300'">5min</button>
                <button type="button" onclick="document.getElementById('upload_interval').value='600'">10min</button>
            </div>
        </div>
    </div>
    
    <!-- Stream Settings -->
    <div class="env-section">
        <h4>🎬 Stream Settings</h4>
        
        <div class="env-field">
            <label>
                <input type="checkbox" name="stream_enabled" value="1" <%if stream_enabled == "1" then%>checked<%end%>>
                Enable Video Stream
            </label>
            <small>Enable/disable mjpg-streamer video streaming service</small>
        </div>
        
        <div class="camera-grid">
            <div class="env-field">
                <label for="stream_resolution">Resolution:</label>
                <select id="stream_resolution" name="stream_resolution">
                    <option value="640x480" <%if stream_resolution == "640x480" then%>selected<%end%>>640x480 (VGA)</option>
                    <option value="1280x720" <%if stream_resolution == "1280x720" then%>selected<%end%>>1280x720 (HD)</option>
                    <option value="1600x1200" <%if stream_resolution == "1600x1200" then%>selected<%end%>>1600x1200 (UXGA)</option>
                    <option value="1920x1080" <%if stream_resolution == "1920x1080" then%>selected<%end%>>1920x1080 (Full HD)</option>
                </select>
            </div>
            
            <div class="env-field">
                <label for="stream_quality">Quality (1-100):</label>
                <input type="number" id="stream_quality" name="stream_quality" min="1" max="100" value="<%=stream_quality%>" placeholder="80">
                <small>JPEG compression quality</small>
            </div>
            
            <div class="env-field">
                <label for="stream_fps">Frame Rate:</label>
                <select id="stream_fps" name="stream_fps">
                    <option value="5" <%if stream_fps == "5" then%>selected<%end%>>5 FPS</option>
                    <option value="10" <%if stream_fps == "10" then%>selected<%end%>>10 FPS</option>
                    <option value="15" <%if stream_fps == "15" then%>selected<%end%>>15 FPS</option>
                    <option value="20" <%if stream_fps == "20" then%>selected<%end%>>20 FPS</option>
                    <option value="25" <%if stream_fps == "25" then%>selected<%end%>>25 FPS</option>
                    <option value="30" <%if stream_fps == "30" then%>selected<%end%>>30 FPS</option>
                </select>
            </div>
            
            <div class="env-field">
                <label for="stream_port">Stream Port:</label>
                <input type="number" id="stream_port" name="stream_port" min="1024" max="65535" value="<%=stream_port%>" placeholder="8080">
                <small>Port for video stream (default: 8080)</small>
            </div>
        </div>
        
        <!-- HTTP Authentication -->
        <div class="auth-section">
            <h5>🔐 HTTP Authentication (Optional)</h5>
            <div class="camera-grid">
                <div class="env-field">
                    <label for="stream_username">Username:</label>
                    <input type="text" id="stream_username" name="stream_username" value="<%=stream_username%>" placeholder="admin">
                    <small>HTTP basic auth username</small>
                </div>
                
                <div class="env-field">
                    <label for="stream_password">Password:</label>
                    <input type="password" id="stream_password" name="stream_password" value="<%=stream_password%>" placeholder="password">
                    <small>HTTP basic auth password</small>
                </div>
            </div>
            <small><strong>Note:</strong> Both username and password must be set to enable authentication. Leave both empty to disable.</small>
        </div>
    </div>
    
    <!-- Camera Hardware Controls -->
    <div class="env-section">
        <h4>📹 Camera Hardware Controls</h4>
        
        <div class="camera-grid">
            <div class="env-field">
                <label for="brightness">Brightness (-64 to 64):</label>
                <input type="number" id="brightness" name="brightness" min="-64" max="64" value="<%=cam_brightness%>" placeholder="0">
            </div>
            
            <div class="env-field">
                <label for="contrast">Contrast (0 to 64):</label>
                <input type="number" id="contrast" name="contrast" min="0" max="64" value="<%=cam_contrast%>" placeholder="32">
            </div>
            
            <div class="env-field">
                <label for="saturation">Saturation (0 to 128):</label>
                <input type="number" id="saturation" name="saturation" min="0" max="128" value="<%=cam_saturation%>" placeholder="64">
            </div>
            
            <div class="env-field">
                <label for="hue">Hue (-40 to 40):</label>
                <input type="number" id="hue" name="hue" min="-40" max="40" value="<%=cam_hue%>" placeholder="0">
            </div>
            
            <div class="env-field">
                <label for="gamma">Gamma (72 to 500):</label>
                <input type="number" id="gamma" name="gamma" min="72" max="500" value="<%=cam_gamma%>" placeholder="100">
            </div>
            
            <div class="env-field">
                <label for="gain">Gain (0 to 100):</label>
                <input type="number" id="gain" name="gain" min="0" max="100" value="<%=cam_gain%>" placeholder="20">
            </div>
            
            <div class="env-field">
                <label for="sharpness">Sharpness (0 to 6):</label>
                <input type="number" id="sharpness" name="sharpness" min="0" max="6" value="<%=cam_sharpness%>" placeholder="3">
            </div>
            
            <div class="env-field">
                <label for="backlight_compensation">Backlight Compensation (0 to 2):</label>
                <input type="number" id="backlight_compensation" name="backlight_compensation" min="0" max="2" value="<%=cam_backlight%>" placeholder="1">
            </div>
        </div>
        
        <div style="margin-top: 15px;">
            <div class="env-field">
                <label>
                    <input type="checkbox" name="auto_white_balance" value="1" <%if cam_auto_wb == "1" then%>checked<%end%>>
                    Auto White Balance
                </label>
            </div>
            
            <div class="env-field">
                <label>
                    <input type="checkbox" name="exposure_auto_priority" value="1" <%if cam_auto_exp == "1" then%>checked<%end%>>
                    Auto Exposure Priority
                </label>
            </div>
        </div>
    </div>
    
    <!-- Azure Storage Settings -->
    <div class="env-section">
        <h4>🗄️ Azure Storage Settings</h4>
        
        <div class="env-field">
            <label for="storage_account">Storage Account Name:</label>
            <input type="text" id="storage_account" name="storage_account" value="<%=storage_account%>" placeholder="octanisaikitprototype">
        </div>
        
        <div class="env-field">
            <label for="container_name">Container Name:</label>
            <input type="text" id="container_name" name="container_name" value="<%=container_name%>" placeholder="webcams">
        </div>
        
        <div class="env-field">
            <label for="sas_token">SAS Token:</label>
            <textarea id="sas_token" name="sas_token" placeholder="?sv=2023-01-03&st=2025-03-15T14%3A10%3A45Z&se=2026-03-16T14%3A10%3A00Z..."><%=sas_token%></textarea>
            <small>Complete SAS token including the leading '?'</small>
        </div>
    </div>
    
    <!-- Camera Settings -->
    <div class="env-section">
        <h4>📷 Camera Settings</h4>
        
        <div class="env-field">
            <label for="customer">Customer Name:</label>
            <input type="text" id="customer" name="customer" value="<%=customer%>" placeholder="OCTANIS">
        </div>
        
        <div class="env-field">
            <label for="camname">Camera Name:</label>
            <input type="text" id="camname" name="camname" value="<%=camname%>" placeholder="glattbrugcam">
        </div>
    </div>
    
    <!-- Monitoring Settings -->
    <div class="env-section">
        <h4>📊 Monitoring Settings</h4>
        
        <div class="env-field">
            <label for="uptime_api">Uptime API URL:</label>
            <input type="url" id="uptime_api" name="uptime_api" value="<%=uptime_api%>" placeholder="https://atc.octanis.ch/api/push/2nnLvkdL98">
        </div>
        
        <div class="env-field">
            <label for="uptime_ping">Uptime Ping URL:</label>
            <input type="url" id="uptime_ping" name="uptime_ping" value="<%=uptime_ping%>" placeholder="https://atc.octanis.ch/api/push/2nnLvkdL98?status=up&msg=OK&ping=">
        </div>
    </div>
    
    <!-- Privacy Settings -->
    <div class="env-section">
        <h4>🔒 Privacy Settings</h4>
        
        <div class="env-field">
            <label for="polygon">Privacy Polygon:</label>
            <input type="text" id="polygon" name="polygon" value="<%=polygon%>" placeholder="100,100 200,100 200,200 100,200">
            <small>Coordinates to blacken area (leave empty to disable). Format: x1,y1 x2,y2 x3,y3 x4,y4</small>
        </div>
    </div>
    
    <!-- Audio Settings -->
    <div class="env-section">
        <h4>🔊 Audio Settings</h4>
        
        <div class="env-field">
            <label>
                <input type="checkbox" name="audio_enabled" value="1" <%if audio_enabled == "true" then%>checked<%end%>>
                Enable Audio Recording
            </label>
        </div>
        
        <div class="env-field">
            <label for="audio_duration">Audio Duration (seconds):</label>
            <input type="number" id="audio_duration" name="audio_duration" value="<%=audio_duration%>" min="1" max="60" placeholder="3">
        </div>
    </div>
    
    <div style="text-align: center; margin: 20px 0;">
        <input type="submit" name="submit" value="💾 Save All Settings" class="cbi-button cbi-button-save">
        <input type="button" value="↻ Reload Page" onclick="window.location.reload()" class="cbi-button">
    </div>
</form>

<div class="env-section">
    <h4>📋 Current .env File</h4>
    <pre style="background: #f8f9fa; padding: 10px; border-radius: 4px; font-size: 12px; overflow-x: auto;"><%=xml.pcdata(env_content)%></pre>
</div>

<div class="env-section">
    <h4>🎬 Current mjpg-streamer UCI Config</h4>
    <pre style="background: #f8f9fa; padding: 10px; border-radius: 4px; font-size: 12px;">
Loaded values:
enabled: <%=stream_enabled%> (<%if stream_enabled == "1" then%>✅ Enabled<%else%>❌ Disabled<%end%>)
resolution: <%=stream_resolution%>
quality: <%=stream_quality%>
fps: <%=stream_fps%>
port: <%=stream_port%>
<%if stream_username ~= "" then%>username: <%=stream_username%> (🔐 Auth enabled)<%else%>username: (not set)<%end%>
<%if stream_password ~= "" then%>password: ••••••••<%else%>password: (not set)<%end%>

Raw UCI output:
<%=xml.pcdata(uci_current_status)%>
    </pre>
</div>

<%+footer%>